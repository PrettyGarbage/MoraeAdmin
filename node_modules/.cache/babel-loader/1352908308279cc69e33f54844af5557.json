{"ast":null,"code":"var _jsxFileName = \"/Users/myungjin/projects/Web/reactstudy/src/components/Day.js\",\n    _s = $RefreshSig$();\n\nimport { useParams } from \"react-router-dom\";\nimport Word from \"./Word\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Day() {\n  _s();\n\n  const {\n    day\n  } = useParams();\n  const [words, setWords] = useState([]);\n  useEffect(() => {});\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Day \", day]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: wordList.map(word => /*#__PURE__*/_jsxDEV(Word, {\n          word: word\n        }, word.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Day, \"jGjjikrmPwWnbN5XmN7eVcg8up0=\", false, function () {\n  return [useParams];\n});\n\n_c = Day;\n\nvar _c;\n\n$RefreshReg$(_c, \"Day\");","map":{"version":3,"names":["useParams","Word","useEffect","useState","Day","day","words","setWords","wordList","map","word","id"],"sources":["/Users/myungjin/projects/Web/reactstudy/src/components/Day.js"],"sourcesContent":["import { useParams } from \"react-router-dom\";\nimport Word from \"./Word\";\nimport {useEffect, useState} from \"react\";\n\n\nexport default function Day()\n{\n    const { day } = useParams();\n    const [words, setWords] = useState([]);\n\n    useEffect(() => {})\n\n    return <>\n        <h2>Day {day}</h2>\n        <table>\n            <tbody>\n            {\n                wordList.map(word => (\n                    <Word word={word} key={word.id}/>\n                ))}\n            </tbody>\n        </table>\n    </>;\n}\n"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,kBAA1B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAAQC,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;;;AAGA,eAAe,SAASC,GAAT,GACf;EAAA;;EACI,MAAM;IAAEC;EAAF,IAAUL,SAAS,EAAzB;EACA,MAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;EAEAD,SAAS,CAAC,MAAM,CAAE,CAAT,CAAT;EAEA,oBAAO;IAAA,wBACH;MAAA,mBAASG,GAAT;IAAA;MAAA;MAAA;MAAA;IAAA,QADG,eAEH;MAAA,uBACI;QAAA,UAEIG,QAAQ,CAACC,GAAT,CAAaC,IAAI,iBACb,QAAC,IAAD;UAAM,IAAI,EAAEA;QAAZ,GAAuBA,IAAI,CAACC,EAA5B;UAAA;UAAA;UAAA;QAAA,QADJ;MAFJ;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QAFG;EAAA,gBAAP;AAWH;;GAlBuBP,G;UAEJJ,S;;;KAFII,G"},"metadata":{},"sourceType":"module"}