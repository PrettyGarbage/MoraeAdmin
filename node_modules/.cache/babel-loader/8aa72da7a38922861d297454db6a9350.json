{"ast":null,"code":"var _jsxFileName = \"/Users/myungjin/projects/Web/reactstudy/src/components/Day.js\";\nimport dummy from \"../db/data.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Day() {\n  const day = 3;\n  const wordList = dummy.words.filter(word => word.day === day);\n  console.log(wordList);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: wordList.map(word => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: word.eng\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: word.kor\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 17\n          }, this)]\n        }, word.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_c = Day;\n\nvar _c;\n\n$RefreshReg$(_c, \"Day\");","map":{"version":3,"names":["dummy","Day","day","wordList","words","filter","word","console","log","map","eng","kor","id"],"sources":["/Users/myungjin/projects/Web/reactstudy/src/components/Day.js"],"sourcesContent":["import dummy from \"../db/data.json\";\n\nexport default function Day()\n{\n    const day = 3;\n    const wordList = dummy.words.filter(word =>\n        (\n            word.day === day\n        ))\n    console.log(wordList);\n\n    return <>\n    <table>\n        <tbody>\n        {\n            wordList.map(word => (\n            <tr key = {word.id}>\n                <td>\n                    {word.eng}\n                </td>\n                <td>\n                    {word.kor}\n                </td>\n            </tr>\n        ))}\n        </tbody>\n    </table>\n    </>;\n}"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,iBAAlB;;;AAEA,eAAe,SAASC,GAAT,GACf;EACI,MAAMC,GAAG,GAAG,CAAZ;EACA,MAAMC,QAAQ,GAAGH,KAAK,CAACI,KAAN,CAAYC,MAAZ,CAAmBC,IAAI,IAEhCA,IAAI,CAACJ,GAAL,KAAaA,GAFJ,CAAjB;EAIAK,OAAO,CAACC,GAAR,CAAYL,QAAZ;EAEA,oBAAO;IAAA,uBACP;MAAA,uBACI;QAAA,UAEIA,QAAQ,CAACM,GAAT,CAAaH,IAAI,iBACjB;UAAA,wBACI;YAAA,UACKA,IAAI,CAACI;UADV;YAAA;YAAA;YAAA;UAAA,QADJ,eAII;YAAA,UACKJ,IAAI,CAACK;UADV;YAAA;YAAA;YAAA;UAAA,QAJJ;QAAA,GAAWL,IAAI,CAACM,EAAhB;UAAA;UAAA;UAAA;QAAA,QADA;MAFJ;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA;EADO,iBAAP;AAiBH;KA1BuBX,G"},"metadata":{},"sourceType":"module"}